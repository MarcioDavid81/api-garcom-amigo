// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar uma migration: yarn prisma migrate dev
model User {
  id        String   @id @default(uuid())
  email     String   
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")

  products Products[]
}

//relacionamento entre as tabelas: category e products
model Products {
  id          String   @id @default(uuid())
  name        String
  description String
  price       String
  banner      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category Category @relation(fields: [category_Id], references: [id])

  @@map("products")

  category_Id  String

  items Item[]
}

model Order {
  id        String   @id @default(uuid())
  table     Int
  status    Boolean @default(false)
  draft     Boolean @default(true)
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")

  items Item[]
}

model Item {
  id          String   @id @default(uuid())
  amount      Int
  observation String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  order Order @relation(fields: [order_Id], references: [id])

  product Products @relation(fields: [product_Id], references: [id])

  @@map("items")

  order_Id  String
  product_Id  String
}
